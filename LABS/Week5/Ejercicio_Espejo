#include <windows.h>
#ifdef APPLE
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif
#define M_PI 3.14159
#include <stdlib.h>
#include <cmath>
float blue[]={0.03,0.18,0.82}, green[]={0.05,0.46,0.22}, orange[]={0.98,0.5,0.28}, cyan[]={0,1,1},red[]={1,0,0};
float yellow[]={1,1,0}, purple[]={0.5,0.1,0.98}, white[]={1,1,1}, black[]={0,0,0},brown[]={0.5,0.35,0.05};
float A[]={0,0},B[]={-2.5,2.5},C[]={-5,2.5},D[]={-5,5},E[]={-2.5,5},F[]={0,5},G[]={0,2.5},H[]={-2.5,0},I[]={-5,0};
void inicio()
{
    glMatrixMode(GL_PROJECTION);
    float a=6;
    gluOrtho2D(-a,a,-a,a);
    glClearColor(1,1,1,1);
}
void triangulo(float *XY, float *XY1, float *XY2, float *rgb){
    glBegin(GL_TRIANGLES);
    glColor3fv(rgb);
    glVertex2fv(XY);
    glVertex2fv(XY1);
    glVertex2fv(XY2);
    glEnd();
}
void dibujo()
{

    for (int i = 0; i < 4; i++)
    {
        glPushMatrix();
        glRotatef(90 * i, 0, 0, 1);
        triangulo(B,C,D, black);
        triangulo(B,E,F,black);
        triangulo(B,G,A,black);
        triangulo(B,H,I,black);
        glPopMatrix();
    }
}

void display (void)
{
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3d(1,0,0);
    dibujo();
    glutSwapBuffers();
}
int main(int argc, char *argv[])
{
    glutInit(&argc, argv); //Inicializa la ventana
    glutInitWindowPosition(700,0); //Posicion de la ventana
    glutInitWindowSize(800,800); //TamaÃ±o de la ventana
    glutInitDisplayMode(GLUT_RGB|GLUT_DOUBLE|GLUT_DEPTH);//Especifica el tipo de modo de visualizacion al crear una ventana(Activa el buffer de colores de tipo RGB
    glutCreateWindow("Mandala Triangulos"); //Nombre que se le da a la ventana
    glutDisplayFunc(display);
    inicio();
    glutMainLoop(); //Hace que aparezca la ventana
    return EXIT_SUCCESS; //Se puede colocar tambien return 0
}
